<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- MenuMapper Interface와 MenuMapper.xml 설정파일 연동
1. DAO 인터페이스와 동일한 패키지에 위치해야 한다.
2. DAO 인터페이스의 풀네임을 namespace로 지정해야 한다.
3. DAO 인터페이스와 XML의 이름이 동일해야 한다.
4. 작성한 메소드의 이름과 id가 일치하고, 리턴 타입이 일치하는 쿼리문을 모두 작성해야 한다.
-->
<mapper namespace="com.ohgiraffers.section03.remix.MenuMapper">

    <!-- 조회한 컬럼과 DTO의 필드를 매핑(연결) 시키기 위한 설정으로 resultMap을 사용한다. -->
    <!-- Mybatis를 통해 자동 매핑을 하기 위해서 MenuDTO에는 기본 생성자, setter 메소드를 이용한다. (없으면 생성해서 동작함) -->
    <!-- 자동 카멜케이스 매핑 시킨다면 아래 코드는 없어도 됨 -->
    <resultMap id="menuResultMap" type="com.ohgiraffers.section03.remix.MenuDTO">
        <id property="menuCode" column="menu_code"/>
        <result property="menuName" column="menu_name"/>
        <result property="menuPrice" column="menu_price"/>
        <result property="categoryCode" column="category_code"/>
        <result property="orderableStatus" column="orderable_status"/>
    </resultMap>

    <select id="selectAllMenu" resultMap="menuResultMap">
    <!-- 아래는 자동 카멜케이스 매핑 시켰을 경우 (ResultMap 선언이 없을 때)-->
    <!-- <select id="selectAllMenu" resultMap="com.ohgiraffers.section03.remix.MenuDTO"> -->
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu
        WHERE
            orderable_status = 'Y'
        ORDER BY
            menu_code
    </select>

    <select id="selectMenuByMenuCode" parameterType="_int" resultMap="menuResultMap">
        SELECT
            menu_code,
            menu_name,
            menu_price,
            category_code,
            orderable_status
        FROM
            tbl_menu
        WHERE
            orderable_status = 'Y'
        AND
            <!-- 정의한 필드네임 적기 -->
            <!-- #{ 둘 사이에 공백이 있으면 안됨 -->
            menu_code = #{ menuCode }
    </select>

    <!-- 파라미터로 전달 된 객체의 필드명으로 값을 바인딩 한다. EX. #{ menuName }
    insert, update, delete의 경우 resultType or resultMap 속성은 작성하지 않으며 기본 _int로 수행 결과를 반환한다. -->
    <!-- 아래 parameterType은 옵셔널이므로 꼭 작성하지 않아도 된다. -->
    <insert id="insertMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">
        INSERT INTO
            tbl_menu (menu_name, menu_price, category_code, orderable_status)
        VALUES
            (#{ menuName }, #{ menuPrice }, #{ categoryCode }, 'Y')
    </insert>

    <update id="updateMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">
        UPDATE
            tbl_menu
        SET
            menu_name = #{ menuName },
            menu_price = #{ menuPrice },
            category_code = #{ categoryCode }
        WHERE
            menu_code = #{ menuCode }
    </update>
    <delete id="deleteMenu" parameterType="_int">
        DELETE FROM
            tbl_menu
        WHERE
            menu_code = #{ menuCode }
    </delete>
</mapper>